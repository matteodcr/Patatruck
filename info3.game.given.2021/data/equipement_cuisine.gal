Feu_cuisson(wait){
    *(wait)
    |Cell(H,P) ? Pop:(cook)            //Si un objet pickable est sur la même case, un Pop va afficher un sprite en mode "feu allumé"
    |Cell(H,V) ?    :(wait)            //Si il n'y a aucune objet sur la même case, on attends
    
    *(cook)
    |True ?     wait:(cuit)            //On effectue un wait, ce qui correspond au temps de cuisson

    *(cuit)
    |Cell(H,P) ?    :(cuit)            //Tant que l'élément pickable est encore présent, on boucle sur cet état
    |Cell(H,V) ?    Wizz:(wait)        //Si l'élément n'est plus présent, le Wizz va afficher un sprite en mode "feu éteint"
}

Friteuse(wait){
    *(wait)
    |Cell(H,P) ? Pop:(cook)            //Si un objet pickable est sur la même case, un Pop va afficher un sprite en mode "huile chaude"
    |Cell(H,V) ?    :(wait)            //Si il n'y a aucune objet sur la même case, on attends
    
    *(cook)
    |True ?     wait:(cuit)            //On effectue un wait, ce qui correspond au temps de cuisson

    *(cuit)
    |Cell(H,P) ?    :(cuit)            //Tant que l'élément pickable est encore présent, on boucle sur cet état
    |Cell(H,V) ?    Wizz:(wait)        //Si l'élément n'est plus présent, le Wizz va afficher un sprite en mode "huile froide"
}

Garde_manger(wait){
    *(wait)
    |Cell(H,V) & GotStuff ?    Wizz:(waitRestock)    //Si la cellule est vide et qu'il reste du stuff on passe dans l'état restock qui va remettre un item sur le présentoire du garde manger
    |True ?    :(wait)                               //rien dans l'inventaire du G_m
    
    *(waitRestock)                        
    |True ? wait:(restock)                           //tps d'attente avant de pouvoir repick un item
    
    *(restock)                     
    |True ? Pop:(wait)                               //On repasse dans l'état wait avec un Pop qui affiche un item sur le présentoire
}

Table(vide){
    *(vide)
    |Cell(H,P) ? Pop:(pleine)        //Si pickable here => état pleine, Pop changement de sprite mode "table pleine"
    |Cell(H,V) ?    :(vide)         //Si void here => état vide
    
    *(pleine)
    |Cell(H,P) ?    :(pleine)        //Si pickable here => état pleine
    |Cell(H,V) ? Wizz:(vide)        //Si void here => état vide, Wizz changement de sprite mode "table vide"
}

Table_a_sauce(ready){
    *(ready)
    |GotPower ? Wizz:(waitRestock)    //S'il y a une interaction, Wizz changement de sprite mode "reload"
    |True ?   :(ready)               //Sinon on reste dans l'état ready
        
    *(waitRestock)                        
    |True ? wait:(restock)          //tps d'attente avant le reload
    
    *(restock)                     
    |True ? Pop:(ready)             //On repasse dans l'état ready avec un Pop changement de sprite mode "table ready"
}
GotPower sera implémenté comme ceci
True=>interaction
False=>!interaction

Planche(vide){
    *(vide)
    |Cell(H,P) ? Pop:(startCoupe)                             //S'il y a un élément pickable on passe dans l'état startCoupe
    |Cell(H,V) ?    :(vide)                                   //S'il n'y a pas d'item on boucle dans l'état vide
    
    *(startCoupe)
    |Cell(H,P) & Key(SPACE) & Cell(F,@) ? Hit: (couper1)       //Si l'élément pickable est toujours présent, que le joueur est en face de la planche et qu'il appuye sur la touche ESPACE, on compte une découpe
    |True ?    :(startCoupe)                                   //Boucle sur l'état actuel si le joueur ne découpe pas
    
    *(couper1)
    |Cell(H,P) & Key(SPACE) & Cell(F,@) ? Hit: (couper2)       //Si l'élément pickable est toujours présent, que le joueur est en face de la planche et qu'il appuye sur la touche ESPACE, on compte une découpe supplémentaire
    |True ?    :(couper1)                                      //Boucle sur l'état actuel si le joueur ne découpe pas
    
    *(couper2)
    |Cell(H,P) & Key(SPACE) & Cell(F,@) ? Hit: (couper)        //Si l'élément pickable est toujours présent, que le joueur est en face de la planche et qu'il appuye sur la touche ESPACE, on compte une découpe supplémentaire
    |True ?    :(couper2)                                      //Boucle sur l'état actuel si le joueur ne découpe pas
    
    *(couper)
    |Cell(H,V) ? Wizz:(vide)                                   //L'élement à fini d'être découpé, on repasse dans l'état vide
    |True ?    :(couper)                                      //Tant que le joueur ne récupère pas l'élément, on boucle dans cet état
}

Livraison(vide){
    *(vide)
    |Cell(H,P) ? Pop:(plein) // si on detecte un pickable dessus, on passe en plein
    |Cell(H,V) ?    :(vide) // sinon on attends
    
    *(plein)
    |Cell(H,P) ? Wizz:(vide) // c'est bon on supprime l'élément
    |True ?          :(plein)
}
